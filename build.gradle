buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = '1.0.0-beta1'
group = 'roastchicken.portalmod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'portalmod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20190719-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', '' //SCAN,REGISTRIES,REGISTRYDUMP
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
//            mods {
//                examplemod {
//                    source sourceSets.main
//                }
//            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', '' //SCAN,REGISTRIES,REGISTRYDUMP
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
//            mods {
//                examplemod {
//                    source sourceSets.main
//                }
//            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', '' //SCAN,REGISTRIES,REGISTRYDUMP
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            args '--mod', 'portalmod', '--all', '--output', file('src/generated/resources/')

            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
//            mods {
//                examplemod {
//                    source sourceSets.main
//                }
//            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.0.55'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}